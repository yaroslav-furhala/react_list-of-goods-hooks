{"version":3,"sources":["components/GoodsList.tsx","components/ListControl.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","ListControl","isReversed","setIsReversed","setSortBy","reset","type","onClick","goodsFromServer","App","useState","isListVisible","setisListVisible","setisReversed","sortBy","visibleGoods","sort","a","b","localeCompare","length","reverse","classNames","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,aAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRF,UAAU,mBAHZ,SAKGE,GAJIA,SCLFC,EAA+B,SAAC,GAKtC,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,UACAC,EACI,EADJA,MAEA,OACE,sBAAKP,UAAU,UAAf,UACE,wBACEQ,KAAK,SACLC,QAAS,kBAAMJ,GAAeD,IAC9BJ,UAAU,SAHZ,qBAOA,wBACEQ,KAAK,SACLC,QAAS,kBAAMH,EAAU,UACzBN,UAAU,SAHZ,iCAOA,wBACEQ,KAAK,SACLC,QAAS,kBAAMH,EAAU,WACzBN,UAAU,SAHZ,4BAOA,wBACEQ,KAAK,SACLC,QAASF,EACTP,UAAU,SAHZ,uBCvBAU,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+DaC,EA5DO,WACpB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOR,EAAP,KAAmBW,EAAnB,KACA,EAA4BH,mBAAS,IAArC,mBAAOI,EAAP,KAAeV,EAAf,KAOMW,EAAY,UAAOP,GAmBzB,OAjBIM,GACFC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQJ,GACN,IAAK,QACH,OAAOG,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXlB,GACFa,EAAaM,UAIb,qBAAKvB,UAAWwB,IAAW,MAAO,CAChC,eAAgBX,EAChB,aAAcA,IAFhB,SAKIA,EAWE,qCACE,cAAC,EAAD,CAAWd,MAAOkB,IAClB,cAAC,EAAD,CACEb,WAAYA,EACZC,cAAeU,EACfT,UAAWA,EACXC,MA/CE,WACZQ,GAAc,GACdT,EAAU,UA8BJ,wBACEE,KAAK,SACLC,QAAS,kBAAMK,GAAiB,IAChCd,UAAU,uBAHZ,sBCrDVyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e69023f9.chunk.js","sourcesContent":["export const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"goods-list\">\n      {goods.map(good => (\n        <li\n          key={good}\n          data-cy=\"Good\"\n          className=\"goods-list__item\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\ntype Props = {\n  goods: string[]\n};\n","export const ListControl: React.FC<Props> = ({\n  isReversed,\n  setIsReversed,\n  setSortBy,\n  reset,\n}) => {\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        onClick={() => setIsReversed(!isReversed)}\n        className=\"button\"\n      >\n        reverse\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setSortBy('alpha')}\n        className=\"button\"\n      >\n        Sort alphabetically\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setSortBy('length')}\n        className=\"button\"\n      >\n        Sort by length\n      </button>\n      <button\n        type=\"button\"\n        onClick={reset}\n        className=\"button\"\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\ntype Props = {\n  isReversed: boolean,\n  setIsReversed: React.Dispatch< React.SetStateAction<boolean>>,\n  setSortBy: React.Dispatch<React.SetStateAction<string>>,\n  reset: () => void\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { GoodsList } from './components/GoodsList';\nimport { ListControl } from './components/ListControl';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isListVisible, setisListVisible] = useState(false);\n  const [isReversed, setisReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n\n  const reset = () => {\n    setisReversed(false);\n    setSortBy('');\n  };\n\n  const visibleGoods = [...goodsFromServer];\n\n  if (sortBy) {\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'alpha':\n          return a.localeCompare(b);\n        case 'length':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className={classNames('App', {\n      'App--before': !isListVisible,\n      'App--after': isListVisible,\n    })}\n    >\n      {!isListVisible\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => setisListVisible(true)}\n            className=\"button button--start\"\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <GoodsList goods={visibleGoods} />\n            <ListControl\n              isReversed={isReversed}\n              setIsReversed={setisReversed}\n              setSortBy={setSortBy}\n              reset={reset}\n            />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}